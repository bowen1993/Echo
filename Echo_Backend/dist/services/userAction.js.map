{"version":3,"sources":["services/userAction.js"],"names":["User","isPhoneExists","phoneNum","userDao","user","findOne","isUserExists","resolve","createNewUser","email","username","console","log","session","getSession","getDao","choose","newUser","create","updateUserInfo","userId","updatedInfo","update","id","$set","module","exports"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,OAAO,iBAAMA,IAAnB;;AAEA,eAAeC,aAAf,CAA6BC,QAA7B,EAAuCC,OAAvC,EAA+C;AAC3C,QAAIC,OAAO,MAAMD,QAAQE,OAAR,CAAgB;AAC7BH,kBAAUA;AADmB,KAAhB,CAAjB;AAGA,QAAII,eAAgBF,QAAQ,IAA5B;;AAEA,WAAO,sBAAY,mBAAW;AAC1BG,gBAAQD,YAAR;AACH,KAFM,CAAP;AAGH;;AAED,eAAeE,aAAf,CAA6BN,QAA7B,EAAuCO,KAAvC,EAA4D;AAAA,QAAdC,QAAc,uEAAL,IAAK;;AACxDC,YAAQC,GAAR,CAAYV,QAAZ,EAAsBO;AACtB;AADA,MAEA,IAAMI,UAAU,MAAM,iBAAMC,UAAN,EAAtB;AACA,QAAMX,UAAUU,QAAQE,MAAR,CAAef,IAAf,CAAhB;AACA,QAAIM,eAAe,MAAML,cAAcC,QAAd,EAAwBC,OAAxB,CAAzB;AACAQ,YAAQC,GAAR,CAAYN,YAAZ;AACA,QAAK,CAACA,YAAN,EAAoB;AAChB,YAAII,YAAY,IAAhB,EAAsB;AAClB;AACAA,uBAAW,kBAAQM,MAAR,EAAX;AACH;;AAED;AACA,YAAIC,UAAU,IAAIjB,IAAJ,CAAS;AACnBU,sBAASA,QADU;AAEnBR,sBAASA,QAFU;AAGnBO,mBAAMA;AAHa,SAAT,CAAd;;AAMA;AACA,cAAMN,QAAQe,MAAR,CAAeD,OAAf,CAAN;AACH;;AAED,WAAO,sBAAY,mBAAW;AAC1BV,gBAAQ,CAACD,YAAT;AACH,KAFM,CAAP;AAGH;;AAED,eAAea,cAAf,CAA8BC,MAA9B,EAAsCC,WAAtC,EAAkD;AAC9C;AACA,QAAMR,UAAU,MAAM,iBAAMC,UAAN,EAAtB;AACA,QAAMX,UAAUU,QAAQE,MAAR,CAAef,IAAf,CAAhB;;AAEA,UAAMG,QAAQmB,MAAR,CAAe;AACjBC,YAAGH;AADc,KAAf,EAEJ;AACEI,cAAMH;AADR,KAFI,CAAN;AAKH;;AAEDI,OAAOC,OAAP,GAAiB;AACblB;AADa,CAAjB","file":"userAction.js","sourcesContent":["import model from '../models'\nimport Moniker from 'moniker'\n\nconst User = model.User\n\nasync function isPhoneExists(phoneNum, userDao){\n    let user = await userDao.findOne({\n        phoneNum: phoneNum\n    })\n    var isUserExists = (user != null)\n\n    return new Promise(resolve => {\n        resolve(isUserExists);\n    })\n}\n\nasync function createNewUser(phoneNum, email, username=null){\n    console.log(phoneNum, email)\n    //get db session\n    const session = await model.getSession()\n    const userDao = session.getDao(User);\n    var isUserExists = await isPhoneExists(phoneNum, userDao)\n    console.log(isUserExists)\n    if ( !isUserExists ){\n        if( username == null ){\n            // generate random username\n            username = Moniker.choose();\n        }\n\n        //create new user\n        let newUser = new User({\n            username:username,\n            phoneNum:phoneNum,\n            email:email\n        });\n\n        //save new user\n        await userDao.create(newUser);\n    }\n    \n    return new Promise(resolve => {\n        resolve(!isUserExists);\n    })\n}\n\nasync function updateUserInfo(userId, updatedInfo){\n    //get db session\n    const session = await model.getSession()\n    const userDao = session.getDao(User);\n\n    await userDao.update({\n        id:userId\n    },{\n        $set: updatedInfo\n    });\n}\n\nmodule.exports = {\n    createNewUser\n}"]}